state_data <- state_data[complete.cases(state_data),]
state_data$total_crime <- with(state_data, rmurd + rrape + rrobb +
raggr + rburg + rlarc + rauto)
str(state_data)
state_data <- read_stata("state_data.dta")
state_data <- state_data[complete.cases(state_data),]
state_data$total_crime <- with(state_data, rmurd + rrape + rrobb +
raggr + rburg + rlarc + rauto)
str(state_data)
lm_state_data <- lm(total_crime~1, data=state_data)
summary(lm_state_data)
lm_state_data <- lm(total_crime~top_1+avgincome+urate+gdp+txsocl+inc_rate,
data=state_data)
summary(lm_state_data)
View(state_data)
lm_state_data <- lm(total_crime~top_1+avgincome+urate+gdp+txsocl,
data=state_data)
summary(lm_state_data)
lm_state_data <- lm(total_crime~top_1+avgincome+urate+gdp+txsocl+gini,
data=state_data)
summary(lm_state_data)
lm_state_data <- lm(total_crime~top_1+avgincome+urate+gdp+txsocl,
data=state_data)
summary(lm_state_data)
28553*1000000
library(shiny)
library(ggplot2)
# create a sample dataset
data <- mtcars
# Define UI
ui <- fluidPage(
titlePanel("Effect of controlling for variables in a multivariate regression"),
# Sidebar layout
sidebarLayout(
# Sidebar panel
sidebarPanel(
# Variable selection
selectInput("xvar", "X Variable:", names(data), selected = "wt"),
selectInput("yvar", "Y Variable:", names(data), selected = "mpg"),
selectInput("zvar", "Z Variable:", names(data), selected = "cyl"),
hr(),
# Checkbox for controlling for Z variable
checkboxInput("control", "Control for Z variable", value = FALSE)
),
# Main panel
mainPanel(
plotOutput("scatterplot")
)
)
)
# Define server
server <- function(input, output) {
# Scatter plot
output$scatterplot <- renderPlot({
# Create plot with or without controlling for Z variable
if (input$control) {
ggplot(data, aes_string(x = input$xvar, y = input$yvar, color = input$zvar)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE)
} else {
ggplot(data, aes_string(x = input$xvar, y = input$yvar)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE)
}
})
}
# Run the app
shinyApp(ui, server)
lm_state_data <- lm(total_crime~top_1+avgincome+urate+gdp+txsocl,
data=state_data)
summary(lm_state_data)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2); library(shiny); library(haven); library(car)
options(scipen=25)
# Chunk 2
reclength<-data.frame(prior_arrests<-c(0,1,1,1,2,2,3,5,7,10),
sent_length<-c(3,6,9,9,12,15,18,24,24,36))
ggplot(data=reclength, aes(x=prior_arrests, y=sent_length)) +
geom_point() + geom_smooth(method="lm", se=FALSE, color="red")
# Chunk 3
school<-data.frame(arrests<-c(10,8,8,6,5,6,4,2,3,1),
grades<-c(50,55,60,65,70,75,80,85,90,95))
ggplot(school, aes(x=arrests,y=grades))+
geom_point()+stat_smooth(method=lm,se=FALSE,color="red")
# Chunk 4
ui <- fluidPage(
titlePanel("Adjust Correlation and Display Scatterplot"),
sidebarLayout(
sidebarPanel(
sliderInput("corr", "Correlation:",
min = -1, max = 1, value = 0, step = 0.1)
),
mainPanel(
plotOutput("scatterplot")
)
)
)
server <- function(input, output) {
# Generate two variables with specified correlation
data <- reactive({
x <- rnorm(100)
y <- input$corr * x + sqrt(1 - input$corr^2) * rnorm(100)
data.frame(x, y)
})
# Display scatterplot with best fit line
output$scatterplot <- renderPlot({
ggplot(data(), aes(x = x, y = y)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) + # Add best fit line
labs(x = "Variable X", y = "Variable Y", title = "Scatterplot with Best Fit Line") +
theme_minimal()
})
}
shinyApp(ui, server)
ggscatter(fit, x = "top_1", y = "total_crime", partial.resid = TRUE,
rug = FALSE, conf.int = TRUE) +
labs(x = "Top 0.1% Income Share", y = "Total Crime Rate (per 100,000)", title = "Partial Regression Plot for Top 0.1% Income Share Controlling for Other Variables")
ggscatter(lm_state_data, x = "top_1", y = "total_crime", partial.resid = TRUE,
rug = FALSE, conf.int = TRUE) +
labs(x = "Top 0.1% Income Share", y = "Total Crime Rate (per 100,000)", title = "Partial Regression Plot for Top 0.1% Income Share Controlling for Other Variables")
library(car)
ggscatter(lm_state_data, x = "top_1", y = "total_crime", partial.resid = TRUE,
rug = FALSE, conf.int = TRUE) +
labs(x = "Top 0.1% Income Share", y = "Total Crime Rate (per 100,000)", title = "Partial Regression Plot for Top 0.1% Income Share Controlling for Other Variables")
library(ggpubr)
ggscatter(lm_state_data, x = "top_1", y = "total_crime", partial.resid = TRUE,
rug = FALSE, conf.int = TRUE) +
labs(x = "Top 0.1% Income Share", y = "Total Crime Rate (per 100,000)", title = "Partial Regression Plot for Top 0.1% Income Share Controlling for Other Variables")
ggplot(lm_state_data, x = "top_1", y = "total_crime", partial.resid = TRUE,
rug = FALSE, conf.int = TRUE) + geom_point() +
labs(x = "Top 0.1% Income Share", y = "Total Crime Rate (per 100,000)", title = "Partial Regression Plot for Top 0.1% Income Share Controlling for Other Variables")
lm_state_data <- lm(total_crime~top_1+avgincome+urate+gdp+txsocl,
data=state_data)
summary(lm_state_data)
ggscatter(lm_state_data, x = "top_1", y = "total_crime", partial.resid = TRUE,
rug = FALSE, conf.int = TRUE) +
labs(x = "Top 0.1% Income Share", y = "Total Crime Rate (per 100,000)", title = "Partial Regression Plot for Top 0.1% Income Share Controlling for Other Variables") +
theme_bw()
ggscatter(lm_state_data, x = top_1, y = total_crime, partial.resid = TRUE,
rug = FALSE, conf.int = TRUE) +
labs(x = "Top 0.1% Income Share", y = "Total Crime Rate (per 100,000)", title = "Partial Regression Plot for Top 0.1% Income Share Controlling for Other Variables") +
theme_bw()
ggscatter(lm_state_data, x = state_data$top_1, y = state_data$total_crime, partial.resid = TRUE,
rug = FALSE, conf.int = TRUE) +
labs(x = "Top 0.1% Income Share", y = "Total Crime Rate (per 100,000)", title = "Partial Regression Plot for Top 0.1% Income Share Controlling for Other Variables") +
theme_bw()
ggscatter(lm_state_data, x = "top_1", y = "total_crime", partial.resid = TRUE,
rug = FALSE, conf.int = TRUE) +
labs(x = "Top 0.1% Income Share", y = "Total Crime Rate (per 100,000)", title = "Partial Regression Plot for Top 0.1% Income Share Controlling for Other Variables") +
theme_bw()
sapply(state_data, class)
state_data <- read_stata("state_data.dta")
state_data <- state_data[complete.cases(state_data),]
state_data$total_crime <- with(state_data, rmurd + rrape + rrobb +
raggr + rburg + rlarc + rauto)
state_data$state <- NULL
str(state_data)
lm_state_data <- lm(total_crime~1, data=state_data)
summary(lm_state_data)
lm_state_data <- lm(total_crime~top_1+avgincome+urate+gdp+txsocl,
data=state_data)
summary(lm_state_data)
ggscatter(lm_state_data, x = "top_1", y = "total_crime", partial.resid = TRUE,
rug = FALSE, conf.int = TRUE) +
labs(x = "Top 0.1% Income Share", y = "Total Crime Rate (per 100,000)", title = "Partial Regression Plot for Top 0.1% Income Share Controlling for Other Variables") +
theme_bw()
state_data <- read_stata("state_data.dta")
state_data <- state_data[complete.cases(state_data),]
state_data$total_crime <- with(state_data, rmurd + rrape + rrobb +
raggr + rburg + rlarc + rauto)
state_data$state <- NULL
state_data[] <- lapply(state_data, as.numeric)
str(state_data)
lm_state_data <- lm(total_crime~1, data=state_data)
summary(lm_state_data)
lm_state_data <- lm(total_crime~top_1+avgincome+urate+gdp+txsocl,
data=state_data)
summary(lm_state_data)
ggscatter(lm_state_data, x = "top_1", y = "total_crime", partial.resid = TRUE,
rug = FALSE, conf.int = TRUE) +
labs(x = "Top 0.1% Income Share", y = "Total Crime Rate (per 100,000)", title = "Partial Regression Plot for Top 0.1% Income Share Controlling for Other Variables") +
theme_bw()
ggscatter(lm_state_data, x = "top_1", y = "total_crime", partial.resid = TRUE,
rug = FALSE, conf.int = TRUE) +
theme_bw()
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2); library(shiny); library(haven); library(ggpubr)
options(scipen=25)
# Chunk 2
reclength<-data.frame(prior_arrests<-c(0,1,1,1,2,2,3,5,7,10),
sent_length<-c(3,6,9,9,12,15,18,24,24,36))
ggplot(data=reclength, aes(x=prior_arrests, y=sent_length)) +
geom_point() + geom_smooth(method="lm", se=FALSE, color="red")
# Chunk 3
school<-data.frame(arrests<-c(10,8,8,6,5,6,4,2,3,1),
grades<-c(50,55,60,65,70,75,80,85,90,95))
ggplot(school, aes(x=arrests,y=grades))+
geom_point()+stat_smooth(method=lm,se=FALSE,color="red")
# Chunk 4
ui <- fluidPage(
titlePanel("Adjust Correlation and Display Scatterplot"),
sidebarLayout(
sidebarPanel(
sliderInput("corr", "Correlation:",
min = -1, max = 1, value = 0, step = 0.1)
),
mainPanel(
plotOutput("scatterplot")
)
)
)
server <- function(input, output) {
# Generate two variables with specified correlation
data <- reactive({
x <- rnorm(100)
y <- input$corr * x + sqrt(1 - input$corr^2) * rnorm(100)
data.frame(x, y)
})
# Display scatterplot with best fit line
output$scatterplot <- renderPlot({
ggplot(data(), aes(x = x, y = y)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) + # Add best fit line
labs(x = "Variable X", y = "Variable Y", title = "Scatterplot with Best Fit Line") +
theme_minimal()
})
}
shinyApp(ui, server)
ggscatter(lm_state_data, x = "top_1", y = "total_crime", partial.resid = TRUE,
rug = FALSE, conf.int = TRUE) +
labs(x = "Top 0.1% Income Share", y = "Total Crime Rate (per 100,000)", title = "Partial Regression Plot for Top 0.1% Income Share Controlling for Other Variables") +
theme_bw()
rlang::last_trace()
rlang::last_trace(drop = FALSE)
ggscatter(lm_state_data, x = "top_1", y = "total_crime", partial.resid = TRUE,
rug = FALSE, conf.int = FALSE) +
labs(x = "Top 0.1% Income Share", y = "Total Crime Rate (per 100,000)", title = "Partial Regression Plot for Top 0.1% Income Share Controlling for Other Variables") +
theme_bw()
ggscatter(lm_state_data, x = "top_1", y = "total_crime", partial.resid = TRUE,
rug = FALSE) +
labs(x = "Top 0.1% Income Share", y = "Total Crime Rate (per 100,000)", title = "Partial Regression Plot for Top 0.1% Income Share Controlling for Other Variables") +
theme_bw()
ggscatter(lm_state_data, x = "top_1", y = "total_crime", partial.resid = TRUE) +
labs(x = "Top 0.1% Income Share", y = "Total Crime Rate (per 100,000)", title = "Partial Regression Plot for Top 0.1% Income Share Controlling for Other Variables") +
theme_bw()
ggscatter(lm_state_data, x = "top_1", y = "total_crime", partial.resid = TRUE,
rug = FALSE, conf.int = FALSE) +
labs(x = "Top 0.1% Income Share", y = "Total Crime Rate (per 100,000)") +
ggtitle("Partial Regression Plot for Top 0.1% Income Share Controlling for Other Variables") +
theme_bw()
# Load the car and ggplot2 packages
library(car)
library(ggplot2)
# Fit a linear regression model
fit <- lm(Sepal.Width ~ Sepal.Length + Petal.Length + Petal.Width, data = iris)
# Create a partial regression plot for Sepal.Length, controlling for other variables
ggscatter(fit, x = "Sepal.Length", y = "Sepal.Width",
partial.resid = TRUE, rug = FALSE, conf.int = TRUE) +
labs(x = "Sepal Length", y = "Sepal Width") +
ggtitle("Partial Regression Plot for Sepal Length Controlling for Other Variables")
data(iris)
# Load the car and ggplot2 packages
library(car)
library(ggplot2)
# Fit a linear regression model
fit <- lm(Sepal.Width ~ Sepal.Length + Petal.Length + Petal.Width, data = iris)
# Create a partial regression plot for Sepal.Length, controlling for other variables
ggscatter(fit, x = "Sepal.Length", y = "Sepal.Width",
partial.resid = TRUE, rug = FALSE, conf.int = TRUE) +
labs(x = "Sepal Length", y = "Sepal Width") +
ggtitle("Partial Regression Plot for Sepal Length Controlling for Other Variables")
?ggscatter
model_data <- data.frame(resid=lm_state_data$residuals,
top_1=state_data$top_1,
total_crime=state_data$total_crime)
ggscatter(model_data, x = "top_1", y = "total_crime", partial.resid = TRUE,
rug = FALSE, conf.int = FALSE) +
labs(x = "Top 0.1% Income Share", y = "Total Crime Rate (per 100,000)") +
ggtitle("Partial Regression Plot for Top 0.1% Income Share Controlling for Other Variables") +
theme_bw()
model_data <- data.frame(resid=lm_state_data$residuals,
top_1=state_data$top_1,
total_crime=state_data$total_crime)
ggscatter(model_data, x = "top_1", y = "total_crime", partial.resid = TRUE,
rug = FALSE, conf.int = FALSE) +
labs(x = "Top 0.1% Income Share", y = "Total Crime Rate (per 100,000)") +
ggtitle("Partial Regression Plot for Top 0.1% Income Share Controlling for Other Variables") +
geom_smooth(method="lm") +
theme_bw()
lm_state_data <- lm(total_crime~top_1+avgincome+urate+gdp+txsocl,
data=state_data)
summary(lm_state_data)
model_data <- data.frame(resid=lm_state_data$rstandard(lm_state_data),
top_1=state_data$top_1,
total_crime=state_data$total_crime)
avPlots(lm_state_data)
?avPlots
avPlots(lm_state_data, terms=top_1)
avPlots(lm_state_data, terms=~top_1)
ggplot(state_data, aes(x=top_1, y=total_crime))
avPlots(lm_state_data, terms=~top_1)
ggplot(state_data, aes(x=top_1, y=total_crime)) +
geom_point() +
geom_smooth(method="lm")
state_data <- read_stata("state_data.dta")
state_data <- state_data[complete.cases(state_data),]
state_data$total_crime <- with(state_data, rmurd + rrape + rrobb +
raggr + rburg + rlarc + rauto)
str(state_data)
ggplot(state_data, aes(x=top_1, y=total_crime)) +
geom_point() +
geom_smooth(method="lm", se=FALSE)
state_data$top_1quint <- quantiles(state_data$top_1,
probs=seq(0.2, 0.40, 0.6, 0.8))
state_data$top_1quint <- quantile(state_data$top_1,
probs=seq(0.2, 0.40, 0.6, 0.8))
state_data$top_1quint <- quantile(state_data$top_1,
probs=seq(0, 1, 0.20))
state_data$top_1quint <- ntile(state_data$top_1, 5)
library(dplyr)
state_data$top_1quint <- ntile(state_data$top_1, 5)
summary(state_data$top_1quint)
state_data$top_1quint <- ntile(state_data$top_1, 5)
table(state_data$top_1quint)
state_data$top_1quint <- ntile(state_data$top_1, 5)
table(state_data$top_1quint)
tapply(state_data$top_1, state_data$top_1quint, summary)
state_data$top_1quint <- ntile(state_data$top_1, 5)
table(state_data$top_1quint)
tapply(state_data$top_1, state_data$top_1quint, summary)
ggplot(state_data, aes(x=top_1quint, y=top_1)) +
geom_box()
state_data$top_1quint <- ntile(state_data$top_1, 5)
table(state_data$top_1quint)
tapply(state_data$top_1, state_data$top_1quint, summary)
ggplot(state_data, aes(x=top_1quint, y=top_1)) +
geom_boxplot()
state_data$top_1quint <- as.factor(ntile(state_data$top_1, 5))
table(state_data$top_1quint)
tapply(state_data$top_1, state_data$top_1quint, summary)
ggplot(state_data, aes(x=top_1quint, y=top_1)) +
geom_boxplot()
lm_topquint <- lm(total_crime~top_1quint, data=state_data)
summary(lm_topquint)
with(state_data, tapply(total_crime, top_1quint, mean))
lm_topquint <- lm(total_crime~top_1quint, data=state_data)
summary(lm_topquint)
with(state_data, tapply(total_crime, top_1quint, summary))
lm_topquint <- lm(total_crime~top_1quint, data=state_data)
summary(lm_topquint)
with(state_data, tapply(total_crime, top_1quint, mean))
lm_topquint <- lm(total_crime~top_1quint, data=state_data)
summary(lm_topquint)
with(state_data, tapply(total_crime, top_1quint, mean))
cat("\\begin{table}\n")
cat("\\begin{tabular}{lccc}\n")
cat("\\hline\n")
cat("Category & Mean & Coefficient & Result")
cat("\\hline\n")
cat("First Quintile & 3562.89 & 3562.89 & 3562.89 \\\\ \n")
cat("Second Quintile & 3581.282 & 18.42 & 3562.86 + 18.42 = `r 3562.86+18.42` \\\\ \n")
cat("Third Quintile & 3524.028 & -38.83 & 3562.86 - 38.83 = `r 3562.86-38.83` \\\\ \n")
cat("Fourth Quintile & 3550.933 & -11.93 & 3562.86 - 11.93 = `r 3562.86-11.93` \\\\ \n")
cat("Fifth Quintile & 3507.683 & -55.18 & 3562.86 - 55.18 = `r 3562.86-55.18` \\\\ \n")
cat("\\hline\n")
cat("\\end{tabular}\n")
cat("\\end{table}\n")
tex2markdown <- function(texstring) {
writeLines(text = texstring,
con = myfile <- tempfile(fileext = ".tex"))
texfile <- pandoc(input = myfile, format = "html")
cat(readLines(texfile), sep = "\n")
unlink(c(myfile, texfile))
}
textable <- "
\\begin{table}
\\begin{tabular}{|l|c|c|c}
\\centering
\\hline
Category & Mean & Coefficient & Result
\\hline
First Quintile & 3562.89 & 3562.89 & 3562.89 \\\\
Second Quintile & 3581.282 & 18.42 & 3562.86 + 18.42 = `r 3562.86+18.42` \\\\
Third Quintile & 3524.028 & -38.83 & 3562.86 - 38.83 = `r 3562.86-38.83` \\\\
Fourth Quintile & 3550.933 & -11.93 & 3562.86 - 11.93 = `r 3562.86-11.93` \\\\
Fifth Quintile & 3507.683 & -55.18 & 3562.86 - 55.18 = `r 3562.86-55.18` \\\\
\\hline
\\end{tabular}
\\end{table}
""
tex2markdown <- function(texstring) {
writeLines(text = texstring,
con = myfile <- tempfile(fileext = ".tex"))
lm_topquint <- lm(total_crime~top_1quint, data=state_data)
summary(lm_topquint)
with(state_data, tapply(total_crime, top_1quint, mean))
abstracts_data <- as.data.frame(read_stata("abstracts_data.dta"))
abstracts_data <- as.data.frame(read_stata("abstracts_data"))
abstracts_data <- read.csv("abstracts_data.csv", header=TRUE)
abstracts_data <- read.csv("abstracts_data", header=TRUE)
abstracts_data <- read.xls("abstracts_data", header=TRUE)
abstracts_data <- read.excel("abstracts_data", header=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2); library(shiny); library(haven); library(car); library(dplyr)
library(readxl)
options(scipen=25)
abstracts_data <- read_excel("abstracts_data.xls", header=TRUE)
abstracts_data <- read_excel("abstracts_data.xls")
abstracts_data$black_sq<-abstracts_data$black^2
summary(lm(violrate~povrate+college+black+black_sq+urban+region,
data=abstracts_data))
abstracts_data$neast<-ifelse(abstracts_data$region=="Northeast",1,0)
abstracts_data$mwest<-ifelse(abstracts_data$region=="Midwest",1,0)
abstracts_data$west<-ifelse(abstracts_data$region=="West",1,0)
abstracts_data$south<-ifelse(abstracts_data$region=="South",1,0)
df_reg<-with(abstracts_data, data.frame(lnpovrate, lncollege, lnblack, lnurban,
neast, mwest, south, west))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2); library(shiny); library(haven); library(car); library(dplyr)
library(readxl)
options(scipen=25)
# Chunk 2
reclength<-data.frame(prior_arrests<-c(0,1,1,1,2,2,3,5,7,10),
sent_length<-c(3,6,9,9,12,15,18,24,24,36))
ggplot(data=reclength, aes(x=prior_arrests, y=sent_length)) +
geom_point() + geom_smooth(method="lm", se=FALSE, color="red")
# Chunk 3
school<-data.frame(arrests<-c(10,8,8,6,5,6,4,2,3,1),
grades<-c(50,55,60,65,70,75,80,85,90,95))
ggplot(school, aes(x=arrests,y=grades))+
geom_point()+stat_smooth(method=lm,se=FALSE,color="red")
# Chunk 4
ui <- fluidPage(
titlePanel("Adjust Correlation and Display Scatterplot"),
sidebarLayout(
sidebarPanel(
sliderInput("corr", "Correlation:",
min = -1, max = 1, value = 0, step = 0.1)
),
mainPanel(
plotOutput("scatterplot")
)
)
)
server <- function(input, output) {
# Generate two variables with specified correlation
data <- reactive({
x <- rnorm(100)
y <- input$corr * x + sqrt(1 - input$corr^2) * rnorm(100)
data.frame(x, y)
})
# Display scatterplot with best fit line
output$scatterplot <- renderPlot({
ggplot(data(), aes(x = x, y = y)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) + # Add best fit line
labs(x = "Variable X", y = "Variable Y", title = "Scatterplot with Best Fit Line") +
theme_minimal()
})
}
shinyApp(ui, server)
vifs<-vif(lm(lnviolrate~lnpovrate+lncollege+lnblack+
lnurban+mwest+south+west,
data=abstracts_data))
abstracts_data$neast<-ifelse(abstracts_data$region=="Northeast",1,0)
abstracts_data$mwest<-ifelse(abstracts_data$region=="Midwest",1,0)
abstracts_data$west<-ifelse(abstracts_data$region=="West",1,0)
abstracts_data$south<-ifelse(abstracts_data$region=="South",1,0)
df_reg<-with(abstracts_data, data.frame(lnpovrate, lncollege, lnblack, lnurban,
neast, mwest, south, west))
## Log transformations
abstracts_data$lnviolrate<-with(abstracts_data, log(violrate))
abstracts_data$lnpovrate<-with(abstracts_data, log(povrate))
abstracts_data$lncollege<-with(abstracts_data, log(college))
abstracts_data$lnblack<-with(abstracts_data, log(black))
abstracts_data$lnurban<-with(abstracts_data, log(urban))
ggplot(abstracts_data, aes(x=lnpovrate, y=lnviolrate)) +
geom_point() +
geom_smooth(method="loess", se=F, linetype="dashed", color="darkred") +
geom_smooth(method="lm", se=F, color="red")
library(lmtest)
bptest(lm2)
lm2<-lm(lnviolrate~lnpovrate+lncollege+lnblack+lnurban+region,
data=abstracts_data)
ggplot(, aes(x=lm2$fitted.values, y=lm2$residuals)) +
geom_point() +
geom_hline(yintercept=0, color='red', linetype='dashed')
library(lmtest)
bptest(lm2)
ols_test_score(lm2)
library(lmtest); library(olsrr)
bptest(lm2)
ols_test_score(lm2)
summary(lm2)
coeftest(lm2, vcov=vcovHC, type="HC1")
library(sandwich)
coeftest(lm2, vcov=vcovHC, type="HC1")
ggplot(data=data.frame(residuals<-lm2$residuals),aes(x=residuals)) +
geom_density() +
stat_function(fun=dnorm, color='red', linetype='dashed',
args=list(mean=mean(residuals),
sd=sd(residuals)))
ggqqplot(lm2$residuals)
shapiro.test(lm2$residuals)
?ggqqplot
12*10
